/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cookbook;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import cookbook.backend.LogIn;
import cookbook.backend.be_objects.User;

class AppTest {
    // Commented out Greeting Test Case
    /*@Test void appHasAGreeting() {
         App classUnderTest = new App();
         assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
     }*/

    @Test
    void testPasswordHashing() {
        LogIn login = new LogIn();
        String testPassword = "password123";

        // Hash the test password and retrieve the stored hash
        String hashedPassword = login.hashPassword(testPassword);
        String retrievedHash = login.getPasswordHash();

        // Check if the hash is not empty
        assertNotEquals("", hashedPassword, "Hashed password should not be empty");

        // Check if the hashed password matches the retrieved hash
        assertEquals(hashedPassword, retrievedHash, "Hashed password should match retrieved hash");
    }

    @Test
    void testUserSaveToDatabase() {
        // Create a user instance with test data
        User testUser = new User(null, "testUser", "testHash", false); // Assuming ID is auto-generated

        // Attempt to save the user to the database
        boolean isSaved = testUser.saveToDatabase();

        // Assert that the user was successfully saved
        assertTrue(isSaved, "User should be successfully saved to the database");
    }
}